kind: Deployment
apiVersion: apps/v1
metadata:
  name: csi-plugin-controller
  namespace: {{ .Release.Namespace }}
labels:
  app: kubernetes
  role: csi-plugin-controller
  high-availability-config.resources.gardener.cloud/type: controller
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: kubernetes
      role: csi-plugin-controller
  template:
    metadata:
{{- if .Values.csiPluginController.podAnnotations }}
      annotations:
{{ toYaml .Values.csiPluginController.podAnnotations | indent 8 }}
{{- end }}
      labels:
        gardener.cloud/role: controlplane
        app: kubernetes
        role: csi-plugin-controller
        networking.gardener.cloud/to-dns: allowed
        networking.gardener.cloud/to-public-networks: allowed
        networking.gardener.cloud/to-alicloud-networks: allowed
        networking.resources.gardener.cloud/to-kube-apiserver-tcp-443: allowed
    spec:
      automountServiceAccountToken: false
      priorityClassName: gardener-system-300
      containers:
      - name: alicloud-csi-diskplugin
        image: {{ index .Values.images "csi-plugin-alicloud" }}
        args:
        - "--endpoint=$(CSI_ENDPOINT)"
        - "--nodeid=dummy"
        - "--run-as-controller=true"
        - --kubeconfig=/var/run/secrets/gardener.cloud/shoot/generic-kubeconfig/kubeconfig
        - "--v=5"
        env:
{{- if .Values.enableADController }}
        - name: DISK_AD_CONTROLLER
          value: {{ .Values.enableADController | quote }}
{{- end }}
        - name: CSI_ENDPOINT
          value: unix://var/lib/kubelet/plugins/diskplugin.csi.alibabacloud.com/csi.sock
        - name: SERVICE_TYPE
          value: provisioner
        - name: INSTALL_SNAPSHOT_CRD
          value: "false"
        - name: REGION_ID
          value: {{ .Values.regionID }}
        - name: ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: cloudprovider
              key: accessKeyID
        - name: ACCESS_KEY_SECRET
          valueFrom:
            secretKeyRef:
              name: cloudprovider
              key: accessKeySecret
        imagePullPolicy: IfNotPresent
{{- if .Values.csiPluginController.podResources.diskPlugin }}
        resources:
{{ toYaml .Values.csiPluginController.podResources.diskPlugin | indent 12 }}
{{- end }}
        ports:
        - containerPort: 80
        - name: healthz
          containerPort: 9808
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 150
          timeoutSeconds: 3
          periodSeconds: 10
          failureThreshold: 5
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/kubelet/plugins/diskplugin.csi.alibabacloud.com
        - mountPath: /var/run/secrets/gardener.cloud/shoot/generic-kubeconfig
          name: kubeconfig-csi-controller-ali-plugin
          readOnly: true
      - name: alicloud-csi-attacher
        image: {{ index .Values.images "csi-attacher" }}
        args:
        - "--v=5"
        - "--csi-address=$(CSI_ENDPOINT)"
        - --kubeconfig=/var/run/secrets/gardener.cloud/shoot/generic-kubeconfig/kubeconfig
        - "--leader-election"
        - "--leader-election-namespace=kube-system"
        env:
        - name: CSI_ENDPOINT
          value: /var/lib/kubelet/plugins/diskplugin.csi.alibabacloud.com/csi.sock
        - name: MY_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
{{- if .Values.csiPluginController.podResources.attacher }}
        resources:
{{ toYaml .Values.csiPluginController.podResources.attacher | indent 12 }}
{{- end }}
        volumeMounts:
        - mountPath: /var/run/secrets/gardener.cloud/shoot/generic-kubeconfig
          name: kubeconfig-csi-attacher
          readOnly: true
        - name: socket-dir
          mountPath: /var/lib/kubelet/plugins/diskplugin.csi.alibabacloud.com
      - name: alicloud-csi-provisioner
        image: {{ index .Values.images "csi-provisioner" }}
        args:
        - "--csi-address=$(CSI_ENDPOINT)"
        - --kubeconfig=/var/run/secrets/gardener.cloud/shoot/generic-kubeconfig/kubeconfig
        - "--feature-gates=Topology=True"
        - "--leader-election-namespace=kube-system"
        - "--volume-name-prefix=pv-{{ .Values.csiPluginController.persistentVolumePrefix }}"
        - "--default-fstype=ext4"
        - "--leader-election=true"
{{- if .Values.csiPluginController.podResources.provisioner }}
        resources:
{{ toYaml .Values.csiPluginController.podResources.provisioner | indent 12 }}
{{- end }}
        env:
        - name: CSI_ENDPOINT
          value: /var/lib/kubelet/plugins/diskplugin.csi.alibabacloud.com/csi.sock
        - name: POD_NAMESPACE
          value: kube-system
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/kubelet/plugins/diskplugin.csi.alibabacloud.com
        - mountPath: /var/run/secrets/gardener.cloud/shoot/generic-kubeconfig
          name: kubeconfig-csi-provisioner
          readOnly: true
      - name: alicloud-csi-snapshotter
        image: {{ index .Values.images "csi-snapshotter" }}
        args:
        - "--csi-address=$(CSI_ENDPOINT)"
        - --kubeconfig=/var/run/secrets/gardener.cloud/shoot/generic-kubeconfig/kubeconfig
        - "--leader-election"
        - "--leader-election-namespace=kube-system"
        - "--snapshot-name-prefix=s-{{ .Values.csiPluginController.snapshotPrefix }}"
        env:
        - name: CSI_ENDPOINT
          value: /var/lib/kubelet/plugins/diskplugin.csi.alibabacloud.com/csi.sock
{{- if .Values.csiPluginController.podResources.snapshotter }}
        resources:
{{ toYaml .Values.csiPluginController.podResources.snapshotter | indent 12 }}
{{- end}}
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/kubelet/plugins/diskplugin.csi.alibabacloud.com
        - mountPath: /var/run/secrets/gardener.cloud/shoot/generic-kubeconfig
          name: kubeconfig-csi-snapshotter
          readOnly: true
      - name: alicloud-csi-resizer
        image: {{ index .Values.images "csi-resizer" }}
        args:
        - "--v=5"
        - "--csi-address=$(ADDRESS)"
        - --kubeconfig=/var/run/secrets/gardener.cloud/shoot/generic-kubeconfig/kubeconfig
        - "--leader-election=true"
        - "--leader-election-namespace=kube-system"
        - "--handle-volume-inuse-error=false"
        env:
        - name: ADDRESS
          value: /var/lib/kubelet/plugins/diskplugin.csi.alibabacloud.com/csi.sock
{{- if .Values.csiPluginController.podResources.resizer }}
        resources:
{{ toYaml .Values.csiPluginController.podResources.resizer | indent 12 }}
{{- end}}
        volumeMounts:
        - mountPath: /var/run/secrets/gardener.cloud/shoot/generic-kubeconfig
          name: kubeconfig-csi-resizer
          readOnly: true
        - name: socket-dir
          mountPath: /var/lib/kubelet/plugins/diskplugin.csi.alibabacloud.com
      - name: alicloud-csi-liveness-probe
        image: {{ index .Values.images "csi-liveness-probe" }}
        args:
        - --csi-address=/var/lib/kubelet/plugins/diskplugin.csi.alibabacloud.com/csi.sock
{{- if .Values.csiPluginController.podResources.livenessProbe }}
        resources:
{{ toYaml .Values.csiPluginController.podResources.livenessProbe | indent 12 }}
{{- end }}
        volumeMounts:
        - name: socket-dir
          mountPath: /var/lib/kubelet/plugins/diskplugin.csi.alibabacloud.com
      volumes:
      - name: socket-dir
        emptyDir: {}
      - name: kubeconfig-csi-controller-ali-plugin
        projected:
          defaultMode: 420
          sources:
          - secret:
              items:
              - key: kubeconfig
                path: kubeconfig
              name: {{ .Values.global.genericTokenKubeconfigSecretName }}
              optional: false
          - secret:
              items:
              - key: token
                path: token
              name: shoot-access-csi-controller-ali-plugin
              optional: false
      - name: kubeconfig-csi-attacher
        projected:
          defaultMode: 420
          sources:
          - secret:
              items:
              - key: kubeconfig
                path: kubeconfig
              name: {{ .Values.global.genericTokenKubeconfigSecretName }}
              optional: false
          - secret:
              items:
              - key: token
                path: token
              name: shoot-access-csi-attacher
              optional: false
      - name: kubeconfig-csi-provisioner
        projected:
          defaultMode: 420
          sources:
          - secret:
              items:
              - key: kubeconfig
                path: kubeconfig
              name: {{ .Values.global.genericTokenKubeconfigSecretName }}
              optional: false
          - secret:
              items:
              - key: token
                path: token
              name: shoot-access-csi-provisioner
              optional: false
      - name: kubeconfig-csi-snapshotter
        projected:
          defaultMode: 420
          sources:
          - secret:
              items:
              - key: kubeconfig
                path: kubeconfig
              name: {{ .Values.global.genericTokenKubeconfigSecretName }}
              optional: false
          - secret:
              items:
              - key: token
                path: token
              name: shoot-access-csi-snapshotter
              optional: false
      - name: kubeconfig-csi-resizer
        projected:
          defaultMode: 420
          sources:
          - secret:
              items:
              - key: kubeconfig
                path: kubeconfig
              name: {{ .Values.global.genericTokenKubeconfigSecretName }}
              optional: false
          - secret:
              items:
              - key: token
                path: token
              name: shoot-access-csi-resizer
              optional: false
